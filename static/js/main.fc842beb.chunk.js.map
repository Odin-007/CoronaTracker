{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/COVID-19.jpg","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","StylesProvider","container","Grid","sapcing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColore","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","console","log","setState","this","image","src","coronaimage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc842beb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__nBUGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3tVfh\"};","module.exports = __webpack_public_path__ + \"static/media/COVID-19.d7265326.jpg\";","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\r\nimport CountUp from 'react-countup'\r\nimport cx from 'classnames';\r\nimport styles from './Cards.module.css';\r\n\r\n\r\n\r\nconst Cards = ({ data :{confirmed, recovered, deaths, lastUpdate} }) => {\r\n   \r\n    if(!confirmed){\r\n        return 'Loading..'\r\n    }\r\n    return (\r\n        <div className = {StylesProvider.container}>\r\n            <Grid container sapcing={3} justify=\"center\">\r\n            <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Infected\r\n                    </Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp  start ={0} end = {confirmed.value} duration = {2} separator = \",\"/>\r\n                        </Typography>\r\n                    <Typography color =\"textSeondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n            </CardContent>\r\n            </Grid>\r\n            <Grid item component ={Card}  xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Recovered\r\n                    </Typography>\r\n                    <Typography variant=\"h5\"><CountUp  start ={0} end = {recovered.value} duration = {2} separator = \",\"/></Typography>\r\n                    <Typography color =\"textSeondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths caused by  COVID-19</Typography>\r\n            </CardContent>\r\n            </Grid>\r\n            <Grid item component ={Card}  xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                    Deaths                    </Typography>\r\n                    <Typography variant=\"h4\"><CountUp  start ={0} end = {deaths.value} duration = {2} separator = \",\"/></Typography>\r\n                    <Typography color =\"textSeondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body1\">Number of active cases of COVID-19</Typography>\r\n            </CardContent>\r\n            </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = \" https://covid19.mathdro.id/api\";\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url ;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableUrl);\r\n \r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    }\r\n    catch(error){\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try{\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date : dailyData.reportDate,\r\n        }));\r\n        return modifiedData\r\n    }\r\n    catch(error){\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`)\r\n            return countries.map((country) => country.name)\r\n    }\r\n    catch(error){\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts = ({ data: { confirmed, recovered, deaths}, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect (() => {\r\n    const fetchAPI = async () => {\r\n    setDailyData(await fetchDailyData());\r\n}\r\n\r\n    fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n         ? (\r\n        <Line\r\n        data ={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets: [{\r\n            data:dailyData.map(({ confirmed }) => confirmed),\r\n            label :'Infected',\r\n            borderColor: 'blue',\r\n            fill: true,\r\n            }, {\r\n                data:dailyData.map(({ deaths}) => deaths),\r\n                label :'Deaths',\r\n                backgroundColore: 'rgba(255, 0,0 ,0.5)',\r\n            borderColor: 'red',\r\n            fill: true,\r\n                 }],\r\n        }}\r\n        />) : null\r\n     );\r\n\r\n     const barChart = (\r\n         confirmed\r\n         ?(\r\n             <Bar \r\n             data = {{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: ['lightblue', 'lightgreen', 'red'],\r\n                    data: [confirmed.value , recovered.value , deaths.value ]\r\n                }]\r\n             }}\r\n             options ={{\r\n                 legend: {display: false},\r\n                 title: { display: true, text:`Current state in ${country}`}\r\n             }}\r\n             \r\n             />\r\n         ) : null\r\n     );\r\n\r\n    return (\r\n            <div className={styles.container}>\r\n                {country ? barChart: lineChart}\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Charts;","import React, { useState, useEffect }from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {countries , fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const[fetchedCountries , setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n                setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    return (\r\n        <FormControl className ={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value =\"\"> Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value ={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n        )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react' ;\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css'\r\nimport {fetchData} from './api';\r\nimport coronaimage from './images/COVID-19.jpg'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n\r\n    }\r\n   async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n        this.setState({data: fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async(country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        console.log(fetchedData);\r\n        this.setState({data: fetchedData, country: country});\r\n\r\n    }\r\n\r\n    render() {\r\n        const { data , country } = this.state;\r\n\r\n        return(\r\n            <div className = {styles.container}>\r\n                <img className={styles.image} src={coronaimage} alt=\"COVID-19\"/>\r\n            <Cards data= {data}/>\r\n            <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n            <Chart  data= {data} country={country}/>\r\n                    </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__-5bbp\",\"card\":\"Cards_card__H5gh1\",\"infected\":\"Cards_infected__XpsU1\",\"recovered\":\"Cards_recovered__3ZJvT\",\"deaths\":\"Cards_deaths__immSH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2JYje\",\"image\":\"App_image__QvFbK\"};"],"sourceRoot":""}